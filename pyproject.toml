[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pacs-dog-map"
version = "1.0.0"
description = "A community-focused tool for tracking dogs and cats that need sterilization"
authors = [
    {name = "PACS Koh Phangan Volunteers", email = "info@pacsthailand.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Other/Nonlisted Topic"
]
dependencies = [
    "pandas>=1.3.0",
    "folium>=0.12.0",
    "requests>=2.25.0",
    "branca>=0.4.0"
]

[project.optional-dependencies]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "coverage>=5.0"
]
dev = [
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.10"
]

[project.urls]
Homepage = "https://github.com/your-username/pacs-dog-map"
Documentation = "https://github.com/your-username/pacs-dog-map#readme"
Repository = "https://github.com/your-username/pacs-dog-map.git"
Issues = "https://github.com/your-username/pacs-dog-map/issues"

[project.scripts]
pacs-map = "pacs_map.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src/pacs_map"]
omit = [
    "*/tests/*",
    "*/test_*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true